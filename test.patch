Index: build_tools/embed_modules.xml
===================================================================
--- build_tools/embed_modules.xml	(revision 398635)
+++ build_tools/embed_modules.xml	(working copy)
@@ -1,46 +1,50 @@
 	<category name="MENUSELECT_EMBED" displayname="Module Embedding" positive_output="yes" remove_on_change="main/asterisk">
-		<member name="EMBED_ADDONS" displayname="Add-ons" remove_on_change="addons/*.o addons/*.oo">
+		<member name="EMBED_ADDONS" displayname="Add-ons" remove_on_change="addons/modules.link addons/*.i addons/*/*.i addons/*.ii addons/*/*.ii addons/*.o addons/*/*.o addons/*.oo addons/*/*.oo addons/*.eo addons/*.so">
 			<depend>gnu_ld</depend>
 			<support_level>extended</support_level>
 		</member>
-		<member name="EMBED_APPS" displayname="Applications" remove_on_change="apps/*.o apps/*.oo">
+		<member name="EMBED_APPS" displayname="Applications" remove_on_change="apps/modules.link apps/*.i apps/*/*.i apps/*.ii apps/*/*.ii apps/*.o apps/*/*.o apps/*.oo apps/*/*.oo apps/*.eo apps/*.so">
 			<depend>gnu_ld</depend>
 			<support_level>extended</support_level>
 		</member>
-		<member name="EMBED_BRIDGES" displayname="Bridging Technologies" remove_on_change="bridges/*.o bridges/*.oo">
+		<member name="EMBED_BRIDGES" displayname="Bridging Technologies" remove_on_change="bridges/modules.link bridges/*.i bridges/*.ii bridges/*.o bridges/*.oo bridges/*.eo bridges/*.so">
 			<depend>gnu_ld</depend>
 			<support_level>extended</support_level>
 		</member>
-		<member name="EMBED_CDR" displayname="Call Detail Recording" remove_on_change="cdr/*.o cdr/*.oo">
+		<member name="EMBED_CDR" displayname="Call Detail Recording" remove_on_change="cdr/modules.link cdr/*.i cdr/*.ii cdr/*.o cdr/*.oo cdr/*.eo cdr/*.so">
 			<depend>gnu_ld</depend>
 			<support_level>extended</support_level>
 		</member>
-		<member name="EMBED_CHANNELS" displayname="Channels" remove_on_change="channels/*.o channels/*/*.o channels/*.oo channels/*/*.oo">
+		<member name="EMBED_CEL" displayname="Channel Event Logging" remove_on_change="cel/modules.link cel/*.i cel/*.ii cel/*.o cel/*.oo cel/*.eo cel/*.so">
 			<depend>gnu_ld</depend>
 			<support_level>extended</support_level>
 		</member>
-		<member name="EMBED_CODECS" displayname="Coders/Decoders" remove_on_change="codecs/*.o codecs/*/*.o codecs/*/*/*.o codecs/*/*.a codecs/*/*/*.a codecs/*.oo codecs/*/*.oo">
+		<member name="EMBED_CHANNELS" displayname="Channels" remove_on_change="channels/modules.link channels/*.i channels/*/*.i channels/*.ii channels/*/*.ii channels/*.o channels/*/*.o channels/*.oo channels/*/*.oo channels/*.eo channels/*.so">
 			<depend>gnu_ld</depend>
 			<support_level>extended</support_level>
 		</member>
-		<member name="EMBED_FORMATS" displayname="File Formats" remove_on_change="formats/*.o formats/*.oo">
+		<member name="EMBED_CODECS" displayname="Coders/Decoders" remove_on_change="codecs/modules.link codecs/*.i codecs/*/*.i codecs/*.ii codecs/*/*.ii codecs/*.o codecs/*/*.o codecs/*/*/*.o codecs/*/*.a codecs/*/*/*.a codecs/*.oo codecs/*/*.oo codecs/*.eo codecs/*.so">
 			<depend>gnu_ld</depend>
 			<support_level>extended</support_level>
 		</member>
-		<member name="EMBED_FUNCS" displayname="Dialplan Functions" remove_on_change="funcs/*.o funcs/*.oo">
+		<member name="EMBED_FORMATS" displayname="File Formats" remove_on_change="formats/modules.link formats/*.i formats/*.ii formats/*.o formats/*.oo formats/*.eo formats/*.so">
 			<depend>gnu_ld</depend>
 			<support_level>extended</support_level>
 		</member>
-		<member name="EMBED_PBX" displayname="PBX Functionality" remove_on_change="pbx/*.o pbx/*/*.o pbx/*.oo pbx/*/*.oo">
+		<member name="EMBED_FUNCS" displayname="Dialplan Functions" remove_on_change="funcs/modules.link funcs/*.i funcs/*.ii funcs/*.o funcs/*.oo funcs/*.eo funcs/*.so">
 			<depend>gnu_ld</depend>
 			<support_level>extended</support_level>
 		</member>
-		<member name="EMBED_RES" displayname="Resource Modules" remove_on_change="res/*.o res/*/*.o res/*.oo res/*/*.oo">
+		<member name="EMBED_PBX" displayname="PBX Functionality" remove_on_change="pbx/modules.link pbx/*.i pbx/*/*.i pbx/*/*.ii pbx/*.ii pbx/*.o pbx/*/*.o pbx/*.oo pbx/*/*.oo pbx/*.eo pbx/*.so">
 			<depend>gnu_ld</depend>
 			<support_level>extended</support_level>
 		</member>
-		<member name="EMBED_TEST" displayname="Test Modules" remove_on_change="tests/*.o tests/*.oo">
+		<member name="EMBED_RES" displayname="Resource Modules" remove_on_change="res/modules.link res/*.i res/*/*.i res/*.ii res/*/*.ii res/*.o res/*/*.o res/*.oo res/*/*.oo res/*.eo res/*.so">
 			<depend>gnu_ld</depend>
 			<support_level>extended</support_level>
 		</member>
+		<member name="EMBED_TESTS" displayname="Test Modules" remove_on_change="tests/modules.link tests/*.i tests/*.ii tests/*.o tests/*.oo tests/*.eo tests/*.so">
+			<depend>gnu_ld</depend>
+			<support_level>extended</support_level>
+		</member>
 	</category>
Index: apps/app_voicemail.c
===================================================================
--- apps/app_voicemail.c	(revision 398635)
+++ apps/app_voicemail.c	(working copy)
@@ -925,7 +925,7 @@
 static const char *substitute_escapes(const char *value);
 static void free_user(struct ast_vm_user *vmu);
 
-struct ao2_container *inprocess_container;
+static struct ao2_container *inprocess_container;
 
 struct inprocess {
 	int count;
Index: funcs/func_curl.c
===================================================================
--- funcs/func_curl.c	(revision 398635)
+++ funcs/func_curl.c	(working copy)
@@ -176,7 +176,7 @@
 	void *value;
 };
 
-AST_LIST_HEAD_STATIC(global_curl_info, curl_settings);
+static AST_LIST_HEAD_STATIC(global_curl_info, curl_settings);
 
 static void curlds_free(void *data)
 {
Index: funcs/func_env.c
===================================================================
--- funcs/func_env.c	(revision 398635)
+++ funcs/func_env.c	(working copy)
@@ -716,8 +716,8 @@
 	return 0;
 }
 
-const char *format2term(enum file_format f) __attribute__((const));
-const char *format2term(enum file_format f)
+static const char *format2term(enum file_format f) __attribute__((const));
+static const char *format2term(enum file_format f)
 {
 	const char *term[] = { "", "\n", "\r\n", "\r" };
 	return term[f + 1];
Index: pbx/pbx_realtime.c
===================================================================
--- pbx/pbx_realtime.c	(revision 398635)
+++ pbx/pbx_realtime.c	(working copy)
@@ -75,8 +75,8 @@
 	char exten[2];
 };
 
-struct ao2_container *cache;
-pthread_t cleanup_thread = 0;
+static struct ao2_container *cache;
+static pthread_t cleanup_thread = 0;
 
 static int cache_hash(const void *obj, const int flags)
 {
Index: res/res_fax.c
===================================================================
--- res/res_fax.c	(revision 398635)
+++ res/res_fax.c	(working copy)
@@ -2869,7 +2869,7 @@
 }
 
 /*! \brief FAXOPT dialplan function */
-struct ast_custom_function acf_faxopt = {
+static struct ast_custom_function acf_faxopt = {
 	.name = "FAXOPT",
 	.read = acf_faxopt_read,
 	.write = acf_faxopt_write,
Index: res/res_pktccops.c
===================================================================
--- res/res_pktccops.c	(revision 398635)
+++ res/res_pktccops.c	(working copy)
@@ -165,9 +165,9 @@
 static int gateinfoperiod = 60;
 static int gatetimeout = 150;
 
-AST_LIST_HEAD_STATIC(cmts_list, cops_cmts);
-AST_LIST_HEAD_STATIC(ippool_list, cops_ippool);
-AST_LIST_HEAD_STATIC(gate_list, cops_gate);
+static AST_LIST_HEAD_STATIC(cmts_list, cops_cmts);
+static AST_LIST_HEAD_STATIC(ippool_list, cops_ippool);
+static AST_LIST_HEAD_STATIC(gate_list, cops_gate);
 
 static int pktccops_add_ippool(struct cops_ippool *ippool);
 static struct cops_gate *cops_gate_cmd(int cmd, struct cops_cmts *cmts, uint16_t trid, uint32_t mta, uint32_t actcount, float bitrate, uint32_t psize, uint32_t ssip, uint16_t ssport, struct cops_gate *gate);
Index: main/ccss.c
===================================================================
--- main/ccss.c	(revision 398635)
+++ main/ccss.c	(working copy)
@@ -890,7 +890,7 @@
 	const struct ast_cc_monitor_callbacks *callbacks;
 };
 
-AST_RWLIST_HEAD_STATIC(cc_monitor_backends, cc_monitor_backend);
+static AST_RWLIST_HEAD_STATIC(cc_monitor_backends, cc_monitor_backend);
 
 int ast_cc_monitor_register(const struct ast_cc_monitor_callbacks *callbacks)
 {
@@ -945,7 +945,7 @@
 	const struct ast_cc_agent_callbacks *callbacks;
 };
 
-AST_RWLIST_HEAD_STATIC(cc_agent_backends, cc_agent_backend);
+static AST_RWLIST_HEAD_STATIC(cc_agent_backends, cc_agent_backend);
 
 int ast_cc_agent_register(const struct ast_cc_agent_callbacks *callbacks)
 {
@@ -1041,7 +1041,7 @@
 	.destructor = cc_generic_monitor_destructor,
 };
 
-struct ao2_container *generic_monitors;
+static struct ao2_container *generic_monitors;
 
 struct generic_monitor_instance {
 	int core_id;
Index: main/data.c
===================================================================
--- main/data.c	(revision 398635)
+++ main/data.c	(working copy)
@@ -172,7 +172,7 @@
 	unsigned int is_pattern:1;
 };
 
-struct {
+static struct {
 	/*! \brief The asterisk data main content structure. */
 	struct ao2_container *container;
 	/*! \brief asterisk data locking mechanism. */
Index: Makefile.moddir_rules
===================================================================
--- Makefile.moddir_rules	(revision 398635)
+++ Makefile.moddir_rules	(working copy)
@@ -47,9 +47,9 @@
 CC_MODS:=$(filter-out $(MENUSELECT_$(MENUSELECT_CATEGORY)),$(ALL_CC_MODS))
 
 ifneq ($(findstring EMBED_$(MENUSELECT_CATEGORY),$(MENUSELECT_EMBED)),)
-    EMBEDDED_MODS:=$(C_MODS) $(CC_MODS)
+    EMBEDDED_MODS:=$(strip $(C_MODS) $(CC_MODS))
 else
-    LOADABLE_MODS:=$(C_MODS) $(CC_MODS)
+    LOADABLE_MODS:=$(strip $(C_MODS) $(CC_MODS))
 endif
 
 # Both C++ and C++ sources need their module name in AST_MODULE
@@ -132,12 +132,12 @@
 	rm -f *.exports
 
 .%.moduleinfo: %.c
-	@echo "<member name=\"$*\" displayname=\"$(shell $(GREP) -e AST_MODULE_INFO $< | head -n 1 | cut -d '"' -f 2)\" remove_on_change=\"$(SUBDIR)/$*.o $(SUBDIR)/$*.so\">" > $@
+	@echo "<member name=\"$*\" displayname=\"$(shell $(GREP) -e AST_MODULE_INFO $< | head -n 1 | cut -d '"' -f 2)\" remove_on_change=\"$(SUBDIR)/$*.i $(SUBDIR)/$*.o $(SUBDIR)/$*.so $(SUBDIR)/$*.eo\">" > $@
 	$(AWK) -f $(ASTTOPDIR)/build_tools/get_moduleinfo $< >> $@
 	echo "</member>" >> $@
 
 .%.moduleinfo: %.cc
-	@echo "<member name=\"$*\" displayname=\"$(shell $(GREP) -e AST_MODULE_INFO $< | head -n 1 | cut -d '"' -f 2)\" remove_on_change=\"$(SUBDIR)/$*.oo $(SUBDIR)/$*.so\">" > $@
+	@echo "<member name=\"$*\" displayname=\"$(shell $(GREP) -e AST_MODULE_INFO $< | head -n 1 | cut -d '"' -f 2)\" remove_on_change=\"$(SUBDIR)/$*.ii $(SUBDIR)/$*.oo $(SUBDIR)/$*.so $(SUBDIR)/$*.eo\">" > $@
 	$(AWK) -f $(ASTTOPDIR)/build_tools/get_moduleinfo $< >> $@
 	echo "</member>" >> $@
 
Index: Makefile.rules
===================================================================
--- Makefile.rules	(revision 398635)
+++ Makefile.rules	(working copy)
@@ -144,15 +144,15 @@
 	$(CMD_PREFIX) $(CXX) $(STATIC_BUILD) -o $@ $(CXX_LDFLAGS_SO) $^ $(CXX_LIBS)
 
 %.eo: %.o
-	$(ECHO_PREFIX) echo "   [EMBED] $< -> $@"
+	$(ECHO_PREFIX) echo "   [EMBED] $^ -> $@"
 	$(CMD_PREFIX) $(ASTTOPDIR)/build_tools/make_linker_eo_script $* > .$@.ld
-	$(CMD_PREFIX) $(LD) -r -T .$@.ld -o $@ $<
+	$(CMD_PREFIX) $(LD) -r -T .$@.ld -o $@ $^
 	$(CMD_PREFIX) rm -f .$@.ld
 
 %.eo: %.oo
-	$(ECHO_PREFIX) echo "   [EMBED] $< -> $@"
+	$(ECHO_PREFIX) echo "   [EMBED] $^ -> $@"
 	$(CMD_PREFIX) $(ASTTOPDIR)/build_tools/make_linker_eo_script $* > .$@.ld
-	$(CMD_PREFIX) $(LD) -r -T .$@.ld -o $@ $<
+	$(CMD_PREFIX) $(LD) -r -T .$@.ld -o $@ $^
 	$(CMD_PREFIX) rm -f .$@.ld
 
 %: %.o
